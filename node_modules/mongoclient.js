var mongoose = require('mongoose');
var fs = require('fs')
var path = require('path')

function Mongoclient(){
	this.formatfiles = {}
	this.widgetSchema = mongoose.Schema({
	    name: String,
		parentWidgetName: String,
		layoutRule: String,
		layoutName: String,
		modes: {
			display: {
				code: String,
				script: String,
				template: String
			}
		}
	}, { collection: 'wizard'})
	
}

Mongoclient.prototype.updatedb = function(dburl,key,file){
	var self = this
	var url = dburl || 'localhost'
	var db = mongoose.createConnection(dburl, 'wizard')
	var WidgetModel = db.model('widget', this.widgetSchema)
	WidgetModel.findOne({'name':key},'some select',function(err,widget){
		if(!widget){
			self.insert(db,WidgetModel,key,file)
			return
		}
		if(file.code){
			widget.modes.display.code = file.code
		}
		if(file.template){
			widget.modes.display.template = file.template
		}
		if(file.script){
			widget.modes.display.script = file.script
		}
        widget.save(function(err){
        	return {code:'fail',text:'error when save.'}
        	console.log(err)
        });
    });
}

Mongoclient.prototype.insert = function(db,model,key,file){
	var widgetEntity = new model({name:key})
	if(file.code){
		widgetEntity.modes.display.code = file.code
	}
	if(file.template){
		widgetEntity.modes.display.template = file.template
	}
	if(file.script){
		widgetEntity.modes.display.script = file.script
	}
	widgetEntity.save()

}

var mongo = new Mongoclient()
mongo.updatedb('127.0.0.1','s',{'code':'test'})

exports.Mongoclient = Mongoclient





